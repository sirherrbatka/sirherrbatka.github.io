* Android
** activity                                                        :activity:
*** reprezentuje pojedynczy ekran zawierający interfej użytkownika
*** deklarowana w manifeście
*** koniecznie utworzenie obiektu intent                             :intent:
**** ważne dla interakcji pomiędzy aplikacjami
*** tworzenie i startowanie                                       :important:
**** tworzenie intent                                                :intent:
***** Intent intent = new Intent(this, Activity.class);              :intent:
**** uruchomienie activity
***** startActivity(intent)
***** startActivityForResult(intent)
****** analog okienka dialogowe (mniej więcej)
****** ponieważ java to choroba, jest to dziwne
******* Intent intent = new Intent(this, GroupActivity.class);
******* startActivityForResult(intent, CODE_ADD_GROUP_ACTIVITY);
******* przy powrocie wywołanie onActivityResult(int reqCode, int resCode, Intent i)
******** TODO reqCode
******** resCode
********* status wyniku (powodzenie == RESULT_OK)
**** Dodatkowe informacje przekazywane w intent
***** intent.putExtra("MAX_VALUE", 123);
*** cykl życia                                               :important:easy:
**** listenery
***** uruchomienie
****** onCreate()
******* przy tworzenie activity
******* inicjalizacja wszystkiego
****** onStart()
******* Wywołana przed wyświetleniem
****** onResume()
******* Wywołana przed rozpoczęciem interakcji
***** zmiana activity
****** onPause (dla aktywności ukrywanej)
******* Zapisanie danych, zatrzymanie działań.
****** onResume() (dla aktywności pokazywanej)
***** zatrzymanie activity
****** onStop()
******* Wywoływane gdy activity przestaje być widoczne.
***** Wznawianie zatrzymanej activity
****** onRestart()
****** onStart()
****** onResume()
***** Niszczenie activity
****** onStop() (wipierw zostanie zatrzymana i ukryta)
****** onDestroy() (następnie
** TODO Przechowywanie danych                                :important:easy:
** TODO Activity i fragmenty                                      :important:
** DONE Czujniki i ich wykorzystanie                              :important:
   CLOSED: [2018-01-23 wto 18:38]
*** Zgodnie z https://developer.android.com/guide/topics/sensors/sensors_overview.html
*** Typy
    | sensor                   | typ               | a co to robi?                                            |
    |--------------------------+-------------------+----------------------------------------------------------|
    | TYPE_ACCELEROMETER       | hardware          | przyśpieszenie w m/s^2 włącznie z siłą grawitacji        |
    | TYPE_AMBIENT_TEMPERATURE | hardware          | temperatura w stopniach Celsjusza                        |
    | TYPE_GRAVITY             | software/hardware | przyśpieszenie w m/s^2                                   |
    | TYPE_GYROSCOPE           | software/hardware | mierzy rotację we wszystkich osiach                      |
    | TYPE_LIGHT               | hardware          | światło w lx                                             |
    | TYPE_LINEAR_ACCELERATION | software/hardware | akcelerometr, pomija siłę grawitacji                     |
    | TYPE_MAGNETIC_FIELD      | hardware          | polę geomagnetyczne we wszystkich osiach w mikro Teslach |
    | TYPE_ORIENTATION         | software          | mierzy rotację. Potrafi obecnie zwrócić macierz rotacji. |
    | TYPE_PRESSURE            | hardware          | Mierzy ciśnienie w pascalach.                            |
    | TYPE_PROXIMITY           | hardware          | zbliżenie w cm od ekranu                                 |
    | TYPE_RELATIVE_HUMIDITY   | hardware          | wilgotność powietrza w %                                 |
    | TYPE_ROTATION_VECTOR     | software/hardware | W zasadzie to samo to orientacja?                        |
    | TYPE_TEMPERATURE         | hardware          | przestarzałe, używać TYPE_AMBIENT_TEMPERATURE            |
*** Czujniki ruhchu
**** mierzą siły wzdłuż trzech osi
**** akcelerometr
**** czujnik grawitacji
**** żyroskop
**** czujnik rotacji?
*** Czujniki pozycji
**** mierzą fizyczną pozycję urządzenia
**** czujnik orientacji (nie wiem jak ma działać)
**** magnetometr
*** czujniki środowiskowe
**** temperatura
**** ciśnienie
**** wilgotność i jaśność
*** Wykorzystanie
**** pobrać z SystemService SensorManager
**** pobrać z SensorManager instancję sensor
**** ((SensorManager)getSystemService(Context.SENSOR_SERVICE)).getDefaultSensor(Sensor.TYPE_ACCELEROMETER)...
**** List<Sensor> deviceSensors = mSensorManager.getSensorList(Sensor.TYPE_ALL) by zobaczyć jakie sensory są obecne.
**** można podłączyć się do sensora za pomocą SensorEventListener
**** SensorEvent
***** typ sensora
***** dokładność danych
***** timestamp
***** surowe dane
**** by korzystać z sensora potrzeba uprawnień.
** TODO Manifest i uprawnienia                               :important:easy:
** TODO Kwalifikatory i ich zastosowanie                          :important:
** TODO Wątki i async task                                   :important:easy:
* iOS
** TODO Objective-C                                           :important:WTF:
*** Jeśli Objective-C to pytanie, odpowiedzią jest NIE.
** TODO Zarządzanie pamięcią w Objective-C                   :important:easy:
** TODO Podstawowe klasy systemowe (NSString, NSArray, NSDictionary, NSSet, ...) :important:easy:
** TODO CoreData.                                                 :important:
** TODO Storyboards.                                              :important:
** TODO Klasy mutable i non-mutable.                              :important:
** TODO AppStore Guidelines.                                      :important:
** TODO Wykorzystanie Instruments (profiler).                     :important:
** TODO Wykorzystanie symulatora.                             :important:WTF:
